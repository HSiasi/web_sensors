-- ----------------------------------------------------
-- Modem Configuration Object
-- Generated by LwM2M Object Generator version 1.4
-- ----------------------------------------------------

require ("lwm2m_object_table")
require ("lwm2m_defs")
require ("utils")

-- ----------------------------------------------------
-- Resource IDs for LwM2M Modem Configuration Object
-- ----------------------------------------------------

-- Lua does not have any concept of constants so
-- be careful with these.

local RES_M_PSM_TIMER = 1
local RES_M_ACTIVE_TIMER = 2
local RES_O_EDRX = 3
local RES_O_RAT_LIST = 4
local RES_O_SERVING_PLMN_RATE_CONTROL = 5

-- ----------------------------------------------------
-- Globals
-- ----------------------------------------------------
object_modem_configuration = {}
object_modem_configuration.objectId = 33051
object_modem_configuration.name = "object_modem_configuration"

-- Add this object to the global object table
lwm2m_object_tbl_add(object_modem_configuration.objectId, object_modem_configuration.name)

local object_table = {

   Name = "Modem Configuration",
   ObjectId = "33051",
   LwM2MVersion = "1.0",
   ObjectVersion = "1.0",
   MultipleInstances = "Single",
   Mandatory = "Optional",

   instance = {}
}

local resource_tbl = {

   [RES_M_PSM_TIMER] = {
      Name = "PSM Timer",
      Operations = "RW",
      MultipleInstances = "Single",
      Mandatory = "Mandatory",
      Type = "Integer",
      Value = 0,
   },

   [RES_M_ACTIVE_TIMER] = {
      Name = "Active Timer",
      Operations = "RW",
      MultipleInstances = "Single",
      Mandatory = "Mandatory",
      Type = "Opaque",
      Value = "",
   },

   [RES_O_EDRX] = {
      Name = "eDRX",
      Operations = "RW",
      MultipleInstances = "Single",
      Mandatory = "Optional",
      Type = "Opaque",
      Value = "",
   },

   [RES_O_RAT_LIST] = {
      Name = "RAT List",
      Operations = "RW",
      MultipleInstances = "Multiple",
      Mandatory = "Optional",
      Type = "Integer",
      Value = {},
   },

   [RES_O_SERVING_PLMN_RATE_CONTROL] = {
      Name = "Serving PLMN Rate Control",
      Operations = "R",
      MultipleInstances = "Single",
      Mandatory = "Optional",
      Type = "Integer",
      Value = 0,
   },
}

-- ----------------------------------------------------
-- Standard Functions
-- ----------------------------------------------------
-- ----------------------------------------------------
-- Load: Loads an object into the object table
-- @param t: the object to be loaded
-- @return  None
-- ----------------------------------------------------
function object_modem_configuration.load(t)
   object_table = t
end

-- ----------------------------------------------------
-- Get Resource Table: Returns the resource table
-- @return  The resource table
-- ----------------------------------------------------
function object_modem_configuration.get_resource_table()
   return resource_tbl
end

-- ----------------------------------------------------
-- Get Resource Type: Returns the resource type
-- @param res: resource identifier.
-- @return  The LwM2M resource type as a string
-- ----------------------------------------------------
function object_modem_configuration.get_resource_type(res)
   return resource_tbl[res].Type
end

-- ----------------------------------------------------
-- Get Object Table: Returns the object table
-- @return  The object table
-- ----------------------------------------------------
function object_modem_configuration.get_object_table()
   return object_table
end

-- ----------------------------------------------------
-- Delete: Delete an Object Instance
-- @param inst: object instance identifier.
-- @return  COAP response code
-- ----------------------------------------------------
function object_modem_configuration.delete (inst)

   if  object_table.instance[inst] == nil then
      return coap.COAP_404_NOT_FOUND
   end

   -- delete the instance from memory
   object_table.instance[inst] = nil

   return coap.COAP_202_DELETED

end

-- ----------------------------------------------------
-- Write: Write a value to a resource
-- @param inst:    object instance identifier.
-- @param res:     the resource identifier
-- @param iface:   indicates the interface the operation
--                 was originated on
-- @param replace: true if the operation should replace
--                 previous resource.
-- @param value:   the value to be written
-- @return  COAP result code
-- ----------------------------------------------------
function object_modem_configuration.write (inst, res, iface, replace, value, userdata)

   if  object_table.instance[inst] == nil or object_table.instance[inst].resource[res] == nil then
      return coap.COAP_404_NOT_FOUND
   end

   if iface == lwm2m_interface_type.LWM2M_DM_INTERFACE then
      -- This an operation on the Device Management interface
      if string.find(object_table.instance[inst].resource[res].Operations, "W") == nil then
         -- The target resource does not support the Write operation
         return coap.COAP_405_METHOD_NOT_ALLOWED, nil, nil
      end
   else
      if string.find(object_table.instance[inst].resource[res].Operations, "W") == nil and
         string.find(object_table.instance[inst].resource[res].Operations, "") == nil then
         return coap.COAP_405_METHOD_NOT_ALLOWED
      end
   end

   local t = type(value)

   if t == "table" then

      if replace == true then
        object_table.instance[inst].resource[res].Value = {}
      end

      -- this is a multi-instance resource; iterate the table and overwrite the values
      -- if the resource instance exists otherwise create a new resource instance
      -- and set the value

      for ri, val in pairs(value) do
         object_table.instance[inst].resource[res].Value[ri] = val
      end

   else
      object_table.instance[inst].resource[res].Value = value
   end

   return coap.COAP_204_CHANGED

end

-------------------------------------------------------
-- Read: Access the value of a resource
-- @param inst: object instance identifier.
-- @param res:  resource identifier.
-- @param dm:   true if the operation is on the DM
--              interface.
-- @return  COAP result code, resource type, value
-- 
-- @comments: The value parameter may be in the form of
--            a Lua Table.
-------------------------------------------------------
function object_modem_configuration.read (inst, res, dm)

   if object_table.instance[inst] == nil or object_table.instance[inst].resource[res] == nil then
      return coap.COAP_404_NOT_FOUND, nil, nil
   end

   if dm == true then
      -- This an operation on the Device Management interface
      if string.find(object_table.instance[inst].resource[res].Operations, "R") == nil then
         -- The target resource does not support the Read operation
         return coap.COAP_405_METHOD_NOT_ALLOWED, nil, nil
      end
   else
      if string.find(object_table.instance[inst].resource[res].Operations, "R") == nil and
         string.find(object_table.instance[inst].resource[res].Operations, "") == nil then
         return coap.COAP_405_METHOD_NOT_ALLOWED
      end
   end

   value = object_table.instance[inst].resource[res].Value
   vtype = object_table.instance[inst].resource[res].Type

   return coap.COAP_205_CONTENT, vtype, value

end

-------------------------------------------------------
-- Discover: Discover LwM2M Attributes
-- @param inst: object instance identifier.
-- @param res:  resource identifier.
-- @return  COAP response code
-------------------------------------------------------
function object_modem_configuration.discover (inst, res)

   if object_table.instance[inst] == nil or object_table.instance[inst].resource[res] == nil then
      return coap.COAP_404_NOT_FOUND
   end

   return coap.COAP_205_CONTENT
end

-- ----------------------------------------------------
-- Create: Create an object instance
-- @param inst: object instance identifier.
-- @return COAP response code
-------------------------------------------------------
function object_modem_configuration.create (inst)

   -- this is a single instance object
   if inst ~= 0 or object_table.instance[inst] ~= nil then
      return coap.COAP_400_BAD_REQUEST
   end

   -- initialize an object instance
   object_table.instance[0] = {

      resource = utils_copy_table(resource_tbl)
   }

   return coap.COAP_201_CREATED

end

-- return the object
return object_modem_configuration

